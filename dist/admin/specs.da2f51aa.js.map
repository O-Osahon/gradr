{"version":3,"sources":["js/specs.js"],"names":["spec","codeEditor","builtUI","activeChallengeIndex","SPECS","firebase","firestore","collection","specsListEl","saveSpecBtn","specNameField","specAboutField","challengeListEl","selectAChallenge","event","item","target","closest","pos","getAttribute","challenge","challenges","challengeDetailsWrap","setAttribute","setValue","guide","challengeListItemTPL","html","map","index","title","extriesAreValid","name","about","Array","isArray","canSaveSpec","removeAttribute","wait","then","queue","clearInputValues","forEach","input","value","saveSpec","details","id","changes","doc","update","get","add","status","type","createAt","Date","now","ref","specNameChanged","slug","specAboutChanged","addAChallenge","saveAChallenge","getValue","match","push","length","buildUI","mode","textContent","mdc","textField","MDCTextField","attachTo","querySelector","addEventListener","list","MDCList","challengeList","singleSelection","listElements","listItemEl","MDCRipple","updated","data","CodeMirror","theme","autofocus","lineWrapping","matchBrackets","autoCloseBrackets","highlightFormatting","adminWillCreateSpec","manageASpec","itemEl","nameInput","focus","aboutInput","click","specsListItemTPL","specs","adminWillViewSpecs","where","snapshot","catch","console","warn","chip","chips","MDCChip"],"mappings":"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","file":"specs.da2f51aa.js","sourceRoot":"../../src/dash","sourcesContent":["import firebase from \"firebase/app\";\n\nimport { html, render } from \"lit-html\";\n\nimport {\n  select,\n  selectAll,\n  goTo,\n  rAF,\n  toSlug,\n  loadCodemirrorAssets,\n  trim,\n  exceptId\n} from \"../../commons/js/utils.js\";\n\nlet spec;\nlet codeEditor;\nlet builtUI = false;\nlet activeChallengeIndex = -1;\n\nconst SPECS = firebase.firestore().collection(\"specs\");\n\nconst specsListEl = select(\"#specs-list\");\nconst saveSpecBtn = select(`[data-action='save-spec']`);\nconst specNameField = select(\"#specname-field\");\nconst specAboutField = select(\"#specabout-field\");\nconst challengeListEl = select(\"#challenge-list\");\n\nconst selectAChallenge = event => {\n  const item = event.target.closest(\"li\");\n  if (!item) return;\n\n  const pos = item.getAttribute(\"data-item-index\");\n  const challenge = spec.challenges[pos];\n  if (!challenge) return;\n\n  const challengeDetailsWrap = select(`[data-manage-challenge]`);\n  challengeDetailsWrap.setAttribute(\"data-manage-challenge\", \"on\");\n  challengeDetailsWrap.setAttribute(\"data-manage-challenge-mode\", \"edit\");\n\n  activeChallengeIndex = pos;\n  codeEditor.setValue(challenge.guide);\n};\n\nconst challengeListItemTPL = challenges => {\n  return html`\n    ${\n      challenges.map(\n        (item, index) => html`\n          <li\n            class=\"mdc-list-item\"\n            tabindex=\"0\"\n            @click=${selectAChallenge}\n            data-item-index=${index}\n          >\n            <span class=\"mdc-list-item__text\">\n              <span class=\"mdc-list-item__primary-text\">${item.title}</span>\n              <span class=\"mdc-list-item__secondary-text\"\n                >Challenge <span class=\"ch-index\">${index + 1}</span></span\n              >\n            </span>\n          </li>\n        `\n      )\n    }\n  `;\n};\n\nconst extriesAreValid = () =>\n  spec &&\n  trim(spec.name) !== \"\" &&\n  trim(spec.about) !== \"\" &&\n  Array.isArray(spec.challenges);\n\nconst canSaveSpec = () => {\n  if (extriesAreValid() === true) {\n    saveSpecBtn.removeAttribute(\"disabled\");\n  } else {\n    saveSpecBtn.setAttribute(\"disabled\", true);\n  }\n\n  rAF({ wait: 2000 }).then(queue => queue(canSaveSpec));\n};\n\nconst clearInputValues = () => {\n  spec = {};\n  if(codeEditor) codeEditor.setValue(\"\");\n  render(challengeListItemTPL([]), challengeListEl);\n\n  [\n    select(\"#specname-field input\"),\n    select(\"#specabout-field input\")\n  ].forEach(input => {\n    const field = input;\n    field.value = \"\";\n  });\n};\n\nconst saveSpec = details => {\n  const { id } = details;\n  if (id) {\n    const changes = exceptId(details);\n    return SPECS.doc(id)\n      .update(changes)\n      .then(() => SPECS.doc(id))\n      .then(doc => doc.get());\n  }\n\n  return SPECS.add({\n    ...details,\n    status: \"active\",\n    type: \"mini-app\",\n    createAt: Date.now()\n  })\n    .then(ref => SPECS.doc(ref.id))\n    .then(doc => doc.get());\n};\n\nconst specNameChanged = event => {\n  spec.name = event.target.value;\n  if (spec.name) {\n    spec.slug = toSlug(spec.name);\n  }\n  // TODO check backend if name is unique, else flag\n};\n\nconst specAboutChanged = event => {\n  spec.about = event.target.value;\n};\n\nconst addAChallenge = () => {\n  const challengeDetailsWrap = select(`[data-manage-challenge]`);\n  challengeDetailsWrap.setAttribute(\"data-manage-challenge\", \"on\");\n  challengeDetailsWrap.setAttribute(\"data-manage-challenge-mode\", \"create\");\n\n  activeChallengeIndex = -1;\n  codeEditor.setValue(\"### Challenge Title\");\n};\n\nconst saveAChallenge = () => {\n  const guide = codeEditor.getValue();\n  const value = guide && guide.match(/^\\s*#{3}\\s+(.*)/);\n  if (value && Array.isArray(value) && value[1]) {\n    const title = value[1];\n    if (activeChallengeIndex < 0) {\n      spec.challenges = spec.challenges || [];\n      spec.challenges.push({ title, guide });\n      activeChallengeIndex = spec.challenges.length - 1;\n    } else {\n      spec.challenges[activeChallengeIndex] = { title, guide };\n    }\n  }\n\n  render(challengeListItemTPL(spec.challenges), challengeListEl);\n};\n\nconst buildUI = mode => {\n  if (builtUI === true) return;\n\n  const viewTitle = select(`[data-view='create-edit-spec'] [data-view-title]`);\n  viewTitle.textContent = mode === \"create\" ? \"Create Spec\" : \"Manage Spec\";\n\n  mdc.textField.MDCTextField.attachTo(specNameField);\n  specNameField\n    .querySelector(\"input\")\n    .addEventListener(\"blur\", specNameChanged);\n\n  mdc.textField.MDCTextField.attachTo(specAboutField);\n  specAboutField\n    .querySelector(\"input\")\n    .addEventListener(\"blur\", specAboutChanged);\n\n  mdc.list.MDCList.attachTo(challengeListEl);\n  const challengeList = new mdc.list.MDCList.attachTo(challengeListEl);\n  challengeList.singleSelection = true;\n  challengeList.listElements.map(listItemEl => new MDCRipple(listItemEl));\n\n  rAF({wait: 1500}).then(() => {\n    select(`[data-action='add-challenge']`).addEventListener(\n      \"click\",\n      addAChallenge\n    );\n  \n    select(`[data-action='save-challenge']`).addEventListener(\n      \"click\",\n      saveAChallenge\n    );\n  });\n\n  saveSpecBtn.addEventListener(\"click\", () => {\n    saveSpec(spec).then(updated => {\n      spec = {\n        id: updated.id,\n        ...updated.data()\n      };\n    });\n  });\n\n  loadCodemirrorAssets({\n    mode: \"markdown\"\n  }).then(() => {\n    codeEditor = CodeMirror(select(\"#challenge-instructions\"), {\n      theme: \"idea\",\n      autofocus: true,\n      lineWrapping: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      mode: { name: \"markdown\", highlightFormatting: true }\n    });\n  });\n\n  builtUI = true;\n};\n\nconst adminWillCreateSpec = () => {\n  buildUI({ mode: \"create\" });\n  clearInputValues();\n\n  goTo(\"create-edit-spec\");\n  rAF().then(queue => queue(canSaveSpec));\n};\n\nconst manageASpec = event => {\n  const itemEl = event.target.closest(\".mdc-card\");\n  if (!itemEl) return;\n\n  const id = itemEl.getAttribute(\"data-key\");\n  if (!id) return;\n\n  SPECS.doc(id)\n    .get()\n    .then(doc => {\n      spec = {\n        id: doc.id,\n        ...doc.data()\n      };\n\n      const nameInput = specNameField.querySelector(\"input\");\n      nameInput.value = spec.name;\n      nameInput.focus();\n\n      const aboutInput = specAboutField.querySelector(\"input\");\n      aboutInput.value = spec.about || '';\n      aboutInput.focus();\n\n      render(challengeListItemTPL(spec.challenges), challengeListEl);\n      challengeListEl.querySelector(\"li\").click();\n    });\n\n  buildUI({ mode: \"manage\" });\n\n  select(`[data-view='create-edit-spec'] [data-view-title]`).textContent =\n    \"Manage A Spec\";\n  goTo(\"create-edit-spec\", { id });\n};\n\nconst specsListItemTPL = specs => {\n  return html`\n    ${\n      specs.map(\n        item => html`\n          <div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-2\">\n            <div\n              class=\"mdc-card text-only\"\n              data-key=${item.id}\n              @click=${manageASpec}\n            >\n              <div class=\"mdc-card__primary-action\" tabindex=\"0\">\n                <h2 class=\"mdc-typography--headline6\">${item.name}</h2>\n                <div class=\"mdc-typography--body2\">${item.about}</div>\n              </div>\n            </div>\n          </div>\n        `\n      )\n    }\n  `;\n};\n\nexport const adminWillViewSpecs = () => {\n  SPECS.where(\"status\", \"==\", \"active\")\n    .get()\n    .then(snapshot => {\n      const specs = [];\n      snapshot.forEach(doc => {\n        specs.push({\n          id: doc.id,\n          ...doc.data()\n        });\n        render(specsListItemTPL(specs), specsListEl);\n      });\n    })\n    .catch(console.warn);\n\n  goTo(\"specs\");\n\n  [...selectAll('.mdc-chip-set')].forEach(chip => {\n    mdc.chips.MDCChip.attachTo(chip);\n  });\n  select(\"[data-action=add-spec]\").addEventListener(\n    \"click\",\n    adminWillCreateSpec\n  );\n};\n\nexport default { adminWillViewSpecs };\n\n/*\n\n*/\n"]}